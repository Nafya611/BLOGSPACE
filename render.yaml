services:
  - type: web
    name: blog-backend
    runtime: docker
    plan: free
    region: oregon
    dockerfilePath: ./Dockerfile
    envVars:
      - key: DEBUG
        value: "False"
      - key: SECRET_KEY
        generateValue: true
      - key: FALLBACK_SECRET_KEY
        value: "django-insecure-fallback-key-for-development-only-change-in-production"
      - key: ALLOWED_HOSTS
        value: "blogspace-vuer.onrender.com,localhost,127.0.0.1"
      - key: DJANGO_SETTINGS_MODULE
        value: "BLOG.settings_production"
      - key: DATABASE_URL
        fromDatabase:
          name: blog-db
          property: connectionString
      - key: POSTGRES_DB
        value: "blogdb"
      - key: POSTGRES_USER
        value: "bloguser"
      - key: POSTGRES_PASSWORD
        fromDatabase:
          name: blog-db
          property: password
      - key: DB_HOST
        fromDatabase:
          name: blog-db
          property: host
      - key: DB_PORT
        fromDatabase:
          name: blog-db
          property: port
      - key: GOOGLE_OAUTH_CLIENT_ID
        value: ""  # Set this in Render dashboard with your actual Google OAuth Client ID
      - key: GOOGLE_OAUTH_CLIENT_SECRET
        value: ""  # Set this in Render dashboard with your actual Google OAuth Client Secret
      - key: GOOGLE_OAUTH_REDIRECT_URI
        value: "https://blogspace-vuer.onrender.com/api/user/google-callback/"
      - key: CLOUDINARY_CLOUD_NAME
        value: ""  # Set this in Render dashboard with your Cloudinary cloud name
      - key: CLOUDINARY_API_KEY
        value: ""  # Set this in Render dashboard with your Cloudinary API key
      - key: CLOUDINARY_API_SECRET
        value: ""  # Set this in Render dashboard with your Cloudinary API secret
      - key: ALLOW_ALL_ORIGINS
        value: "true"
      - key: PORT
        value: "8000"

databases:
  - name: blog-db
    plan: free
    databaseName: blogdb
    user: bloguser
